<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="test" name="NoChangeParking">
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>

	<property name="version" value="0.0.1-SNAPSHOT" />
	<property name="jruby.home" value="${basedir}/lib/.jruby"/>

	<property environment="env"/>
	<property file="build.properties" />

    <path id="jruby.classpath">
      <fileset dir="lib">
        <include name="**/*.jar"/>
      </fileset>
    </path>
	
	<path id="JUnit 4.libraryclasspath">
		<pathelement location="lib/junit-4.8.2.jar"/>
	</path>
	<path id="project.classpath">
		<pathelement location="target/classes"/>
		<path refid="JUnit 4.libraryclasspath"/>
		<pathelement location="lib/cglib-2.1_3-src.jar"/>
		<pathelement location="lib/cglib-nodep-2.1_3.jar"/>
		<pathelement location="lib/easymock.jar"/>
		<pathelement location="lib/easymockclassextension.jar"/>
	</path>

	<path id="test.classpath">
		<path refid="project.classpath" />
		<path refid="jruby.classpath" />
		<pathelement location="target/test-classes/"/>
	</path>

	<path id="cobertura.classpath">
		<pathelement location="target/instrumented-classes/"/>
		<fileset dir="lib\cobertura-1.9.3">
			<include name="cobertura.jar" />
			<include name="lib/**/*.jar" />
		</fileset>
	</path>
	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

	<target name="init">
		<mkdir dir="target"/>
		<mkdir dir="target/classes"/>
		<mkdir dir="target/test-classes"/>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src" excludes="**/*.launch, **/*.java"/>
		</copy>
	</target>

	<target name="clean">
		<delete dir="target"/>
	</target>

	<target depends="clean" name="cleanall"/>
	<target name="build" depends="build-subprojects,build-project" />
	<target name="test" depends="build, unit-test"  />
	<target name="accept" depends="build, unit-test, acceptance-test" />
	<target name="package" depends="build, unit-test, acceptance-test, jar" />

	<target name="build-subprojects"/>

	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}"/>
		<javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" source="${source}" target="${target}">
			<src path="${src.dir}"/>
			<classpath refid="project.classpath"/>
		</javac>
		<echo message="${ant.project.name}: ${ant.file} Tests"/>
		<javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" source="${source}" target="${target}">
			<src path="${test.dir}"/>
			<classpath refid="test.classpath">
			</classpath>
		</javac>
	</target>

	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>

	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
		<copy todir="${ant.library.dir}">
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
		</copy>
		<unzip dest="${ant.library.dir}">
			<patternset includes="jdtCompilerAdapter.jar"/>
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
		</unzip>
	</target>

	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
		<antcall target="build"/>
	</target>

	<target name="unit-test" >
		<cobertura-instrument todir="target/instrumented-classes">
			<fileset dir="target/classes">
				<include name="**/*.class"/>
			</fileset>
		</cobertura-instrument>

		<mkdir dir="${junit.output.dir}"/>
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml"/>
			<classpath refid="test.classpath"/>
			<classpath refid="cobertura.classpath"/>
			<batchtest fork="yes" todir="${junit.output.dir}">
				<fileset dir="target/test-classes">
					<include name="**/*Test*.class"/>
				</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${junit.output.dir}"/>
		</junitreport>
		<cobertura-report format="xml" srcdir="${src.dir}" destdir="${coverage.output.dir}"/>
		<cobertura-report format="html" srcdir="${src.dir}" destdir="${coverage.output.dir}"/>
	</target>

	<target name="cucumber" description="Run Cucumber">
		<property name="cucumber.output.dir" value="target/test-reports/cucumber-report" />
		<delete dir="${cucumber.output.dir}" />
		<mkdir dir="${cucumber.output.dir}"/>
		<mkdir dir="${cucumber.output.dir}/TEST-features"/>

		<condition property="suite.name" value="${test.suite}" else="features" >
			<isset property="test.suite" />
		</condition>
		
		<taskdef name="cucumber" classname="cuke4duke.ant.CucumberTask" 
			classpathref="jruby.classpath"/>
		
		<cucumber
	        args="--verbose --require target/test-classes 
				--color	--format pretty
				--format junit --out ${cucumber.output.dir}
				--format html --out ${cucumber.output.dir}/Suite-${suite.name}.html
			    ${suite.name}"
	        	objectFactory="pico">
			<classpath>
				<path refid="project.classpath" />
				<pathelement location="target/test-classes"/>
				<pathelement location="target/classes"/>
			</classpath>
		</cucumber>		
	</target>
		
	<target name="acceptance-test" >
		<antcall target="cucumber" >
			<param name="test.suite" value="features"/>
			<param name="allow.fail" value="true"/>
		</antcall>
	</target>

	<target name="jar">
		<jar jarfile="target/${ant.project.name}-${version}.jar" basedir="target/classes"/>
		<jar jarfile="target/${ant.project.name}-${version}-tests.jar" basedir="target/test-classes"/>
	</target>

	<target name="setup-cuke4duke" >
		<unzip src="${tools.dir}/jruby-bin-1.6.1.zip" dest="${tools.dir}" />
		<exec executable="${jruby.home}/bin/jruby">
			<arg line="-S gem  install cuke4duke"/>
		</exec>
	</target>
	
	<target name="install-gems" >
	    <taskdef name="gem" classname="cuke4duke.ant.GemTask"
	       classpathref="jruby.classpath"/>
	    <gem args="install cuke4duke --source http://gemcutter.org/"/>
	    <gem args="install syntax --source http://gemcutter.org/"/>
	</target>
	
</project>

